name: Generate PR Description

on:
  pull_request:
    types:
      - opened
      - synchronize

permissions:
  pull-requests: write
  contents: read

jobs:
  generate-pull-request-changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate PR Description
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: commits } = await github.rest.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            let description = '## 📝 Changes\n\n';

            // Group files by type
            const fileTypes = {
              'Frontend': files.filter(f => f.filename.match(/\.(tsx?|jsx?|css|scss)$/)),
              'Backend': files.filter(f => f.filename.match(/\.(ts|js)$/) && !f.filename.match(/\.(tsx?|jsx?)$/)),
              'Config': files.filter(f => f.filename.match(/\.(json|yml|yaml|toml|env)$/)),
              'Docs': files.filter(f => f.filename.match(/\.(md|txt)$/)),
              'Other': files.filter(f => !f.filename.match(/\.(tsx?|jsx?|ts|js|css|scss|json|yml|yaml|toml|env|md|txt)$/))
            };

            Object.entries(fileTypes).forEach(([type, files]) => {
              if (files.length > 0) {
                description += `### ${type}\n`;
                files.forEach(file => {
                  const status = file.status === 'added' ? '➕' : 
                               file.status === 'modified' ? '✏️' : 
                               file.status === 'removed' ? '🗑️' : '📝';
                  description += `- ${status} \`${file.filename}\`\n`;
                });
                description += '\n';
              }
            });

            description += `## 📊 Summary\n`;
            description += `- **Files changed:** ${files.length}\n`;
            description += `- **Additions:** +${files.reduce((sum, f) => sum + f.additions, 0)}\n`;
            description += `- **Deletions:** -${files.reduce((sum, f) => sum + f.deletions, 0)}\n`;
            description += `- **Commits:** ${commits.length}\n\n`;

            // Update PR description
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: description
            });
